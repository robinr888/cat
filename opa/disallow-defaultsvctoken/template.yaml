apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: k8spspverifyserviceaccounttoken
  annotations:
    description: >-
      Controls the ability of any Pod to enable automountServiceAccountToken and use serviceAccountName as default .
spec:
  crd:
    spec:
      names:
        kind: K8sPSPVerifyServiceAccountToken
      validation:
        openAPIV3Schema:
          type: object
          description: >-
            Controls the ability of any Pod to enable automountServiceAccountToken and use serviceAccountName as default.
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8spspverifyserviceaccounttoken

        violation[{"msg": msg}] {
            obj := input.review.object
            svctokenname(obj.spec)
            msg := sprintf("Service Account token name  default and Automount Service Token set to true is disallowed, pod: %v", [obj.metadata.name])
        }

        svctokenname(spec) {
            not spec.serviceAccountName != "default"
        }
        svctokenname(spec) {
            spec.automountServiceAccountToken == true
        }
        svctokenname(spec) {
            not has_key(spec, "automountServiceAccountToken")
            "/var/run/secrets/kubernetes.io/serviceaccount" == input_containers[_].volumeMounts[_].mountPath
        }
        input_containers[c] {
            c := input.review.object.spec.containers[_]
        }
        input_containers[c] {
            c := input.review.object.spec.initContainers[_]
        }
        # Ephemeral containers not checked as it is not possible to set field.
        has_key(x, k) {
            _ = x[k]
        }

